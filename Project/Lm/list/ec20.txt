; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave --exceptions -o.\output\ec20.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\ec20.d --cpu=Cortex-M3 --apcs=interwork//ropi -O0 --diag_suppress=9931 -I.\Include -I..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\..\Utilities\STM32F4-Discovery -I..\lib\inc -I..\..\Utilities\FatFs_R0_10b\src -I..\..\Utilities\MP3 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include -I..\..\..\..\Desktop\rapidjson-master\include -IC:\Users\MOCNIK\Documents\stm32\Project\Lm\RTE -IC:\Keil\ARM\PACK\Keil\STM32F2xx_DFP\1.0.7\Device\Include -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\PACK\Keil\STM32F2xx_DFP\1.0.7 -D__MICROLIB -D__UVISION_VERSION=515 -DSTM32F2XX -DUSE_STDPERIPH_DRIVER -DARM_MATH_CM3 -D__IOC_V2__ --omf_browse=.\output\ec20.crf Source\ec20.cpp]
                          THUMB

                          AREA ||i._ZN5_EC2012LoadSettingsEPSt6__FILE||, CODE, READONLY, ALIGN=2

                          REQUIRE _scanf_int
                  _ZN5_EC2012LoadSettingsEPSt6__FILE PROC ; _EC20::LoadSettings(std::__FILE*)
;;;46     	*/
;;;47     void		_EC20::LoadSettings(FILE *f) {
000000  b530              PUSH     {r4,r5,lr}
000002  b0a1              SUB      sp,sp,#0x84
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;48     char		c[128];
;;;49     				fgets(c,sizeof(c),f);
000008  462a              MOV      r2,r5
00000a  2180              MOVS     r1,#0x80
00000c  a801              ADD      r0,sp,#4
00000e  f7fffffe          BL       fgets
;;;50     				sscanf(c,"%d,%d,%d",&pw,&width,&repeat);
000012  f1040308          ADD      r3,r4,#8
000016  1d22              ADDS     r2,r4,#4
000018  a103              ADR      r1,|L1.40|
00001a  a801              ADD      r0,sp,#4
00001c  9400              STR      r4,[sp,#0]
00001e  f7fffffe          BL       __0sscanf
;;;51     }
000022  b021              ADD      sp,sp,#0x84
000024  bd30              POP      {r4,r5,pc}
;;;52     /*******************************************************************************/
                          ENDP

000026  0000              DCW      0x0000
                  |L1.40|
000028  25642c25          DCB      "%d,%d,%d",0
00002c  642c2564
000030  00      
000031  00                DCB      0
000032  00                DCB      0
000033  00                DCB      0

                          AREA ||i._ZN5_EC2012SaveSettingsEPSt6__FILE||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  _ZN5_EC2012SaveSettingsEPSt6__FILE PROC ; _EC20::SaveSettings(std::__FILE*)
;;;57     	*/
;;;58     void		_EC20::SaveSettings(FILE *f) {
000000  b538              PUSH     {r3-r5,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;59     				fprintf(f,"%5d,%5d,%5d       /.. flash\r\n",pw,width,repeat);
000006  6820              LDR      r0,[r4,#0]
000008  9000              STR      r0,[sp,#0]
00000a  a103              ADR      r1,|L2.24|
00000c  4628              MOV      r0,r5
00000e  e9d42301          LDRD     r2,r3,[r4,#4]
000012  f7fffffe          BL       __2fprintf
;;;60     }
000016  bd38              POP      {r3-r5,pc}
;;;61     /*******************************************************************************/
                          ENDP

                  |L2.24|
000018  2535642c          DCB      "%5d,%5d,%5d       /.. flash\r\n",0
00001c  2535642c
000020  25356420
000024  20202020
000028  20202f2e
00002c  2e20666c
000030  6173680d
000034  0a00    
000036  00                DCB      0
000037  00                DCB      0

                          AREA ||i._ZN5_EC209IncrementEiiPv||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_sizespec
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_f
                          REQUIRE _printf_c
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  _ZN5_EC209IncrementEiiPv PROC ; _EC20::Increment(int, int, void*)
;;;67     /*******************************************************************************/
;;;68     int			_EC20::Increment(int updown, int leftright, void *parent)
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;69     	{
000004  b0b1              SUB      sp,sp,#0xc4
000006  4604              MOV      r4,r0
000008  4689              MOV      r9,r1
00000a  4692              MOV      r10,r2
;;;70     		_LM 		*lm = static_cast<_LM *>(parent);	
00000c  f8ddb0d0          LDR      r11,[sp,#0xd0]
;;;71     		CanMsg 	msg;
;;;72     		switch(idx=__min(__max(idx+leftright,0),3))
000010  6a60              LDR      r0,[r4,#0x24]
000012  4450              ADD      r0,r0,r10
000014  2800              CMP      r0,#0
000016  dd02              BLE      |L3.30|
000018  6a60              LDR      r0,[r4,#0x24]
00001a  4450              ADD      r0,r0,r10
00001c  e000              B        |L3.32|
                  |L3.30|
00001e  2000              MOVS     r0,#0
                  |L3.32|
000020  2803              CMP      r0,#3
000022  da08              BGE      |L3.54|
000024  6a60              LDR      r0,[r4,#0x24]
000026  4450              ADD      r0,r0,r10
000028  2800              CMP      r0,#0
00002a  dd02              BLE      |L3.50|
00002c  6a60              LDR      r0,[r4,#0x24]
00002e  4450              ADD      r0,r0,r10
000030  e002              B        |L3.56|
                  |L3.50|
000032  2000              MOVS     r0,#0
000034  e000              B        |L3.56|
                  |L3.54|
000036  2003              MOVS     r0,#3
                  |L3.56|
000038  6260              STR      r0,[r4,#0x24]
00003a  b130              CBZ      r0,|L3.74|
00003c  2801              CMP      r0,#1
00003e  d01d              BEQ      |L3.124|
000040  2802              CMP      r0,#2
000042  d033              BEQ      |L3.172|
000044  2803              CMP      r0,#3
000046  d148              BNE      |L3.218|
000048  e046              B        |L3.216|
                  |L3.74|
;;;73     			{
;;;74     			case 0:
;;;75     				pw= __min(__max(pw+updown,5),995);
00004a  6860              LDR      r0,[r4,#4]
00004c  4448              ADD      r0,r0,r9
00004e  2805              CMP      r0,#5
000050  dd02              BLE      |L3.88|
000052  6860              LDR      r0,[r4,#4]
000054  4448              ADD      r0,r0,r9
000056  e000              B        |L3.90|
                  |L3.88|
000058  2005              MOVS     r0,#5
                  |L3.90|
00005a  f24031e3          MOV      r1,#0x3e3
00005e  4288              CMP      r0,r1
000060  da08              BGE      |L3.116|
000062  6860              LDR      r0,[r4,#4]
000064  4448              ADD      r0,r0,r9
000066  2805              CMP      r0,#5
000068  dd02              BLE      |L3.112|
00006a  6860              LDR      r0,[r4,#4]
00006c  4448              ADD      r0,r0,r9
00006e  e003              B        |L3.120|
                  |L3.112|
000070  2005              MOVS     r0,#5
000072  e001              B        |L3.120|
                  |L3.116|
000074  f24030e3          MOV      r0,#0x3e3
                  |L3.120|
000078  6060              STR      r0,[r4,#4]
;;;76     			break;
00007a  e02e              B        |L3.218|
                  |L3.124|
;;;77     			case 1: 
;;;78     				width= __min(__max(width+updown,100),1000);
00007c  68a0              LDR      r0,[r4,#8]
00007e  4448              ADD      r0,r0,r9
000080  2864              CMP      r0,#0x64
000082  dd02              BLE      |L3.138|
000084  68a0              LDR      r0,[r4,#8]
000086  4448              ADD      r0,r0,r9
000088  e000              B        |L3.140|
                  |L3.138|
00008a  2064              MOVS     r0,#0x64
                  |L3.140|
00008c  f5b07f7a          CMP      r0,#0x3e8
000090  da08              BGE      |L3.164|
000092  68a0              LDR      r0,[r4,#8]
000094  4448              ADD      r0,r0,r9
000096  2864              CMP      r0,#0x64
000098  dd02              BLE      |L3.160|
00009a  68a0              LDR      r0,[r4,#8]
00009c  4448              ADD      r0,r0,r9
00009e  e003              B        |L3.168|
                  |L3.160|
0000a0  2064              MOVS     r0,#0x64
0000a2  e001              B        |L3.168|
                  |L3.164|
0000a4  f44f707a          MOV      r0,#0x3e8
                  |L3.168|
0000a8  60a0              STR      r0,[r4,#8]
;;;79     			break;
0000aa  e016              B        |L3.218|
                  |L3.172|
;;;80     			case 2:
;;;81     				repeat= __min(__max(repeat+updown,2),50);
0000ac  6820              LDR      r0,[r4,#0]
0000ae  4448              ADD      r0,r0,r9
0000b0  2802              CMP      r0,#2
0000b2  dd02              BLE      |L3.186|
0000b4  6820              LDR      r0,[r4,#0]
0000b6  4448              ADD      r0,r0,r9
0000b8  e000              B        |L3.188|
                  |L3.186|
0000ba  2002              MOVS     r0,#2
                  |L3.188|
0000bc  2832              CMP      r0,#0x32
0000be  da08              BGE      |L3.210|
0000c0  6820              LDR      r0,[r4,#0]
0000c2  4448              ADD      r0,r0,r9
0000c4  2802              CMP      r0,#2
0000c6  dd02              BLE      |L3.206|
0000c8  6820              LDR      r0,[r4,#0]
0000ca  4448              ADD      r0,r0,r9
0000cc  e002              B        |L3.212|
                  |L3.206|
0000ce  2002              MOVS     r0,#2
0000d0  e000              B        |L3.212|
                  |L3.210|
0000d2  2032              MOVS     r0,#0x32
                  |L3.212|
0000d4  6020              STR      r0,[r4,#0]
;;;82     			break;
0000d6  e000              B        |L3.218|
                  |L3.216|
;;;83     			case 3:
;;;84     				break;
0000d8  bf00              NOP      
                  |L3.218|
0000da  bf00              NOP                            ;76
;;;85     			}
;;;86     
;;;87     			printf("\r:EC20         %3.1lf%c,%4dus,%4dHz,",((double)pw)/10,'%',width,repeat);
0000dc  6860              LDR      r0,[r4,#4]
0000de  f7fffffe          BL       __aeabi_i2d
0000e2  4605              MOV      r5,r0
0000e4  2200              MOVS     r2,#0
0000e6  4b92              LDR      r3,|L3.816|
0000e8  f7fffffe          BL       __aeabi_ddiv
0000ec  4607              MOV      r7,r0
0000ee  460b              MOV      r3,r1
0000f0  2225              MOVS     r2,#0x25
0000f2  68a1              LDR      r1,[r4,#8]
0000f4  6820              LDR      r0,[r4,#0]
0000f6  e9cd2100          STRD     r2,r1,[sp,#0]
0000fa  9002              STR      r0,[sp,#8]
0000fc  463a              MOV      r2,r7
0000fe  a08d              ADR      r0,|L3.820|
000100  f7fffffe          BL       __2printf
;;;88     
;;;89     			if(updown || leftright)
000104  f1b90f00          CMP      r9,#0
000108  d102              BNE      |L3.272|
00010a  f1ba0f00          CMP      r10,#0
00010e  d037              BEQ      |L3.384|
                  |L3.272|
;;;90     				{
;;;91     					E=0;
000110  2000              MOVS     r0,#0
000112  6220              STR      r0,[r4,#0x20]
;;;92     					if(idx < 3)
000114  6a60              LDR      r0,[r4,#0x24]
000116  2803              CMP      r0,#3
000118  da32              BGE      |L3.384|
;;;93     						{
;;;94     							msg.EC20set.Code=Id_EC20Set;
00011a  2003              MOVS     r0,#3
00011c  f88d00b8          STRB     r0,[sp,#0xb8]
;;;95     							msg.EC20set.Uo=Uo*10;
000120  68e0              LDR      r0,[r4,#0xc]
000122  eb000080          ADD      r0,r0,r0,LSL #2
000126  f64f71ff          MOV      r1,#0xffff
00012a  ea010040          AND      r0,r1,r0,LSL #1
00012e  f8ad00b9          STRH     r0,[sp,#0xb9]
;;;96     							msg.EC20set.To=width;
000132  8920              LDRH     r0,[r4,#8]
000134  b280              UXTH     r0,r0
000136  f8ad00bb          STRH     r0,[sp,#0xbb]
;;;97     							msg.EC20set.Mode=2;																																												 //??
00013a  2002              MOVS     r0,#2
00013c  f88d00bd          STRB     r0,[sp,#0xbd]
;;;98     							lm->can.Send(Sys2Ec,&msg,sizeof(EC20set));
000140  2306              MOVS     r3,#6
000142  aa2e              ADD      r2,sp,#0xb8
000144  2121              MOVS     r1,#0x21
000146  f50b708e          ADD      r0,r11,#0x11c
00014a  f7fffffe          BL       _ZN4_CAN4SendE6_stdidP6CanMsgj ; _CAN::Send(_stdid, CanMsg*, unsigned)
;;;99     
;;;100    							msg.EC20reset.Code=Id_EC20Reset;
00014e  2014              MOVS     r0,#0x14
000150  f88d00b8          STRB     r0,[sp,#0xb8]
;;;101    							msg.EC20reset.Period=1000/repeat;
000154  f44f717a          MOV      r1,#0x3e8
000158  6820              LDR      r0,[r4,#0]
00015a  fb91f0f0          SDIV     r0,r1,r0
00015e  b280              UXTH     r0,r0
000160  f8ad00b9          STRH     r0,[sp,#0xb9]
;;;102    							msg.EC20reset.Pw=pw;
000164  88a0              LDRH     r0,[r4,#4]
000166  b280              UXTH     r0,r0
000168  f8ad00bb          STRH     r0,[sp,#0xbb]
;;;103    							msg.EC20reset.Fo=Fo;
00016c  7c20              LDRB     r0,[r4,#0x10]
00016e  f88d00bd          STRB     r0,[sp,#0xbd]
;;;104    							lm->can.Send(Sys2Ec,&msg,sizeof(EC20reset));
000172  2306              MOVS     r3,#6
000174  aa2e              ADD      r2,sp,#0xb8
000176  2121              MOVS     r1,#0x21
000178  f50b708e          ADD      r0,r11,#0x11c
00017c  f7fffffe          BL       _ZN4_CAN4SendE6_stdidP6CanMsgj ; _CAN::Send(_stdid, CanMsg*, unsigned)
                  |L3.384|
;;;105    						}
;;;106    				}
;;;107    				
;;;108    // ec20 states as from status....
;;;109    #define _COMPLETED	0x8000
;;;110    #define	_SIMGEN			0x4000
;;;111    #define _SIM_DET		0x0001		
;;;112    #define _TS1_IOC		0x1000
;;;113    #define _FOOT_ACK		0x0200
;;;114    #define	_STATUS_MASK				(_COMPLETED +  _SIMGEN +  _SIM_DET + _TS1_IOC +  _FOOT_ACK)
;;;115    // ec20 status commands				
;;;116    #define	_SIMGEN			0x4000
;;;117    #define	_HV1_EN			0x0001
;;;118    #define _FOOT_REQ		0x0100
;;;119    				
;;;120    				msg.EC20com.Code=Id_EC20Com;
000180  2002              MOVS     r0,#2
000182  f88d00b8          STRB     r0,[sp,#0xb8]
;;;121    				msg.EC20com.Command=0;
000186  2000              MOVS     r0,#0
000188  f8ad00b9          STRH     r0,[sp,#0xb9]
;;;122    				lm->pyro.enabled=true;
00018c  2101              MOVS     r1,#1
00018e  f88b1430          STRB     r1,[r11,#0x430]
;;;123    				
;;;124    				switch(status & _STATUS_MASK)
000192  f24d2101          MOV      r1,#0xd201
000196  69a0              LDR      r0,[r4,#0x18]
000198  4008              ANDS     r0,r0,r1
00019a  f24c2201          MOV      r2,#0xc201
00019e  1a81              SUBS     r1,r0,r2
0001a0  4290              CMP      r0,r2
0001a2  d03f              BEQ      |L3.548|
0001a4  dc0a              BGT      |L3.444|
0001a6  f5b04f00          CMP      r0,#0x8000
0001aa  d00e              BEQ      |L3.458|
0001ac  f5b04f40          CMP      r0,#0xc000
0001b0  d010              BEQ      |L3.468|
0001b2  f46f4140          MVN      r1,#0xc000
0001b6  4408              ADD      r0,r0,r1
0001b8  bb90              CBNZ     r0,|L3.544|
0001ba  e019              B        |L3.496|
                  |L3.444|
0001bc  f5b16f60          CMP      r1,#0xe00
0001c0  d02f              BEQ      |L3.546|
0001c2  f5b15f80          CMP      r1,#0x1000
0001c6  d13c              BNE      |L3.578|
0001c8  e02d              B        |L3.550|
                  |L3.458|
;;;125    					{
;;;126    					case _COMPLETED:
;;;127    						msg.EC20com.Command=_SIMGEN;
0001ca  f44f4080          MOV      r0,#0x4000
0001ce  f8ad00b9          STRH     r0,[sp,#0xb9]
;;;128    					break;
0001d2  e03a              B        |L3.586|
                  |L3.468|
;;;129    					
;;;130    					case _COMPLETED + _SIMGEN:											// standby
;;;131    						printf(" STNDBY");
0001d4  a061              ADR      r0,|L3.860|
0001d6  f7fffffe          BL       __2printf
;;;132    						if(updown>0 && idx==3)
0001da  f1b90f00          CMP      r9,#0
0001de  dd06              BLE      |L3.494|
0001e0  6a60              LDR      r0,[r4,#0x24]
0001e2  2803              CMP      r0,#3
0001e4  d103              BNE      |L3.494|
;;;133    							msg.EC20com.Command=_SIMGEN + _HV1_EN;
0001e6  f2440001          MOV      r0,#0x4001
0001ea  f8ad00b9          STRH     r0,[sp,#0xb9]
                  |L3.494|
;;;134    						break;
0001ee  e02c              B        |L3.586|
                  |L3.496|
;;;135    						
;;;136    					case _COMPLETED + _SIMGEN + _SIM_DET:						// simmer
;;;137    						printf(" SIMMER");
0001f0  a05c              ADR      r0,|L3.868|
0001f2  f7fffffe          BL       __2printf
;;;138    						if(updown>0 && idx==3)
0001f6  f1b90f00          CMP      r9,#0
0001fa  dd06              BLE      |L3.522|
0001fc  6a60              LDR      r0,[r4,#0x24]
0001fe  2803              CMP      r0,#3
000200  d103              BNE      |L3.522|
;;;139    							msg.EC20com.Command=_SIMGEN + _HV1_EN + _FOOT_REQ;
000202  f2441001          MOV      r0,#0x4101
000206  f8ad00b9          STRH     r0,[sp,#0xb9]
                  |L3.522|
;;;140    						if(updown<0 && idx==3)
00020a  f1b90f00          CMP      r9,#0
00020e  da06              BGE      |L3.542|
000210  6a60              LDR      r0,[r4,#0x24]
000212  2803              CMP      r0,#3
000214  d103              BNE      |L3.542|
;;;141    							msg.EC20com.Command=_SIMGEN;
000216  f44f4080          MOV      r0,#0x4000
00021a  f8ad00b9          STRH     r0,[sp,#0xb9]
                  |L3.542|
;;;142    						break;
00021e  e014              B        |L3.586|
                  |L3.544|
000220  e00f              B        |L3.578|
                  |L3.546|
;;;143    						
;;;144    					case _COMPLETED + _SIMGEN + _SIM_DET + _TS1_IOC:
;;;145    					case _COMPLETED + _SIMGEN + _SIM_DET + _FOOT_ACK:
000222  bf00              NOP      
                  |L3.548|
;;;146    					case _COMPLETED + _SIMGEN + _SIM_DET + _TS1_IOC + _FOOT_ACK:
000224  bf00              NOP      
                  |L3.550|
;;;147    						printf(" LASE..");														// lasing
000226  a051              ADR      r0,|L3.876|
000228  f7fffffe          BL       __2printf
;;;148    						if(updown<0 && idx==3)
00022c  f1b90f00          CMP      r9,#0
000230  da06              BGE      |L3.576|
000232  6a60              LDR      r0,[r4,#0x24]
000234  2803              CMP      r0,#3
000236  d103              BNE      |L3.576|
;;;149    							msg.EC20com.Command=_SIMGEN + _HV1_EN;
000238  f2440001          MOV      r0,#0x4001
00023c  f8ad00b9          STRH     r0,[sp,#0xb9]
                  |L3.576|
;;;150    						break;
000240  e003              B        |L3.586|
                  |L3.578|
;;;151    
;;;152    					default:
;;;153    						printf(" wait..");														// cakanje na ec20
000242  a04c              ADR      r0,|L3.884|
000244  f7fffffe          BL       __2printf
;;;154    						break;
000248  bf00              NOP      
                  |L3.586|
00024a  bf00              NOP                            ;128
;;;155    					}
;;;156    
;;;157    					if(msg.EC20com.Command)
00024c  f8bd00b9          LDRH     r0,[sp,#0xb9]
000250  b130              CBZ      r0,|L3.608|
;;;158    						lm->can.Send(Sys2Ec,&msg,sizeof(EC20com));
000252  2303              MOVS     r3,#3
000254  aa2e              ADD      r2,sp,#0xb8
000256  2121              MOVS     r1,#0x21
000258  f50b708e          ADD      r0,r11,#0x11c
00025c  f7fffffe          BL       _ZN4_CAN4SendE6_stdidP6CanMsgj ; _CAN::Send(_stdid, CanMsg*, unsigned)
                  |L3.608|
;;;159    
;;;160    					char c[128];
;;;161    					sprintf(c,"  %3.1lfJ,%5dW,%3.1lf'C,%3.1lf'C,%5.1lf",
000260  2200              MOVS     r2,#0
000262  4b46              LDR      r3,|L3.892|
000264  e9db7128          LDRD     r7,r1,[r11,#0xa0]
000268  4638              MOV      r0,r7
00026a  f7fffffe          BL       __aeabi_dsub
00026e  2200              MOVS     r2,#0
000270  4b43              LDR      r3,|L3.896|
000272  e9cd0104          STRD     r0,r1,[sp,#0x10]
000276  f7fffffe          BL       __aeabi_ddiv
00027a  2200              MOVS     r2,#0
00027c  4b41              LDR      r3,|L3.900|
00027e  e9cd0106          STRD     r0,r1,[sp,#0x18]
000282  f7fffffe          BL       __aeabi_dadd
000286  e9cd010c          STRD     r0,r1,[sp,#0x30]
00028a  f7fffffe          BL       _ZN4_ADC8InstanceEv ; _ADC::Instance()
00028e  6dc0              LDR      r0,[r0,#0x5c]
000290  9007              STR      r0,[sp,#0x1c]
000292  f7fffffe          BL       __aeabi_i2d
000296  4607              MOV      r7,r0
000298  2200              MOVS     r2,#0
00029a  4b3b              LDR      r3,|L3.904|
00029c  f7fffffe          BL       __aeabi_ddiv
0002a0  4605              MOV      r5,r0
0002a2  460e              MOV      r6,r1
0002a4  6821              LDR      r1,[r4,#0]
0002a6  6a20              LDR      r0,[r4,#0x20]
0002a8  4348              MULS     r0,r1,r0
0002aa  f44f717a          MOV      r1,#0x3e8
0002ae  fb90f0f1          SDIV     r0,r0,r1
0002b2  900b              STR      r0,[sp,#0x2c]
0002b4  6a20              LDR      r0,[r4,#0x20]
0002b6  f7fffffe          BL       __aeabi_i2d
0002ba  4607              MOV      r7,r0
0002bc  2200              MOVS     r2,#0
0002be  4b33              LDR      r3,|L3.908|
0002c0  f7fffffe          BL       __aeabi_ddiv
0002c4  e9cd0108          STRD     r0,r1,[sp,#0x20]
0002c8  e9db012a          LDRD     r0,r1,[r11,#0xa8]
0002cc  e9cd0106          STRD     r0,r1,[sp,#0x18]
0002d0  e9dd010c          LDRD     r0,r1,[sp,#0x30]
0002d4  e9cd5602          STRD     r5,r6,[sp,#8]
0002d8  e9cd0104          STRD     r0,r1,[sp,#0x10]
0002dc  980b              LDR      r0,[sp,#0x2c]
0002de  9000              STR      r0,[sp,#0]
0002e0  a12b              ADR      r1,|L3.912|
0002e2  a80e              ADD      r0,sp,#0x38
0002e4  e9dd2308          LDRD     r2,r3,[sp,#0x20]
0002e8  f7fffffe          BL       __2sprintf
;;;162    																											(double)E/1000,
;;;163    																												E*repeat/1000,
;;;164    																													(double)_ADC::Instance()->Th2o/100,
;;;165    																														(lm->plotA-7800.0)/200.0+25.0,
;;;166    																															(double)lm->plotB);
;;;167    																													
;;;168    					if(E != 0)																			// ce strel, izpis energije, temperature
0002ec  6a20              LDR      r0,[r4,#0x20]
0002ee  b120              CBZ      r0,|L3.762|
;;;169    						printf("%s",c);
0002f0  a90e              ADD      r1,sp,#0x38
0002f2  a031              ADR      r0,|L3.952|
0002f4  f7fffffe          BL       __2printf
0002f8  e008              B        |L3.780|
                  |L3.762|
;;;170    					else
;;;171    						printf("%*c",strlen(c)+1,' ');
0002fa  a80e              ADD      r0,sp,#0x38
0002fc  f7fffffe          BL       strlen
000300  1c45              ADDS     r5,r0,#1
000302  2220              MOVS     r2,#0x20
000304  4629              MOV      r1,r5
000306  a02d              ADR      r0,|L3.956|
000308  f7fffffe          BL       __2printf
                  |L3.780|
;;;172    					
;;;173    					for(int i=7*(8-idx)+3; i--; printf("\b"));			// mismas... poravnava kurzorja	xD
00030c  6a60              LDR      r0,[r4,#0x24]
00030e  f1c00008          RSB      r0,r0,#8
000312  ebc000c0          RSB      r0,r0,r0,LSL #3
000316  1cc5              ADDS     r5,r0,#3
000318  e002              B        |L3.800|
                  |L3.794|
00031a  a029              ADR      r0,|L3.960|
00031c  f7fffffe          BL       __2printf
                  |L3.800|
000320  0028              MOVS     r0,r5
000322  f1a50501          SUB      r5,r5,#1
000326  d1f8              BNE      |L3.794|
;;;174    					return 0;
;;;175    	}
000328  b035              ADD      sp,sp,#0xd4
00032a  e8bd8ff0          POP      {r4-r11,pc}
;;;176    /**
                          ENDP

00032e  0000              DCW      0x0000
                  |L3.816|
                          DCD      0x40240000
                  |L3.820|
000334  0d3a4543          DCB      "\r:EC20         %3.1lf%c,%4dus,%4dHz,",0
000338  32302020
00033c  20202020
000340  20202025
000344  332e316c
000348  6625632c
00034c  25346475
000350  732c2534
000354  64487a2c
000358  00      
000359  00                DCB      0
00035a  00                DCB      0
00035b  00                DCB      0
                  |L3.860|
00035c  2053544e          DCB      " STNDBY",0
000360  44425900
                  |L3.868|
000364  2053494d          DCB      " SIMMER",0
000368  4d455200
                  |L3.876|
00036c  204c4153          DCB      " LASE..",0
000370  452e2e00
                  |L3.884|
000374  20776169          DCB      " wait..",0
000378  742e2e00
                  |L3.892|
                          DCD      0x40be7800
                  |L3.896|
                          DCD      0x40690000
                  |L3.900|
                          DCD      0x40390000
                  |L3.904|
                          DCD      0x40590000
                  |L3.908|
                          DCD      0x408f4000
                  |L3.912|
000390  20202533          DCB      "  %3.1lfJ,%5dW,%3.1lf'C,%3.1lf'C,%5.1lf",0
000394  2e316c66
000398  4a2c2535
00039c  64572c25
0003a0  332e316c
0003a4  6627432c
0003a8  25332e31
0003ac  6c662743
0003b0  2c25352e
0003b4  316c6600
                  |L3.952|
0003b8  257300            DCB      "%s",0
0003bb  00                DCB      0
                  |L3.956|
0003bc  252a6300          DCB      "%*c",0
                  |L3.960|
0003c0  0800              DCB      "\b",0
0003c2  00                DCB      0
0003c3  00                DCB      0

                          AREA ||i._ZN5_EC20C1Ev||, CODE, READONLY, ALIGN=1

                  _ZN5_EC20C2Ev                  ; Alternate entry point ; _EC20::_EC20__sub_object()
                  _ZN5_EC20C1Ev PROC ; _EC20::_EC20()
;;;23     /*******************************************************************************/
;;;24     _EC20::_EC20() {
;;;25     	repeat=2;
;;;26     	pw=500;
;;;27     	width=200;
;;;28     	Uo=400;
;;;29     	Fo=100;
;;;30     	idx=mode=status=error=E=0;
;;;31     }
;;;32     /*******************************************************************************/
000000  2102              MOVS     r1,#2
000002  6001              STR      r1,[r0,#0]
000004  f44f71fa          MOV      r1,#0x1f4
000008  6041              STR      r1,[r0,#4]
00000a  21c8              MOVS     r1,#0xc8
00000c  6081              STR      r1,[r0,#8]
00000e  0049              LSLS     r1,r1,#1
000010  60c1              STR      r1,[r0,#0xc]
000012  2164              MOVS     r1,#0x64
000014  6101              STR      r1,[r0,#0x10]
000016  2100              MOVS     r1,#0
000018  6201              STR      r1,[r0,#0x20]
00001a  61c1              STR      r1,[r0,#0x1c]
00001c  6181              STR      r1,[r0,#0x18]
00001e  6141              STR      r1,[r0,#0x14]
000020  6241              STR      r1,[r0,#0x24]
000022  4770              BX       lr
                          ENDP


                          AREA ||i._ZN5_EC20D1Ev||, CODE, READONLY, ALIGN=1

                  _ZN5_EC20D2Ev                  ; Alternate entry point ; _EC20::~_EC20__sub_object()
                  _ZN5_EC20D1Ev PROC ; _EC20::~_EC20()
;;;38     /*******************************************************************************/
;;;39     _EC20::~_EC20() {
;;;40     }
;;;41     /*******************************************************************************/
000000  4770              BX       lr
                          ENDP


                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN5_EC20C1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN5_EC20C1Ev||
                          DCD      0x00000001

                          AREA ||area_number.7||, LINKORDER=||i._ZN5_EC20D1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5_EC20D1Ev||
                          DCD      0x00000001

                          AREA ||area_number.8||, LINKORDER=||i._ZN5_EC209IncrementEiiPv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.ARM.exidx||
                          REQUIRE __aeabi_unwind_cpp_pr0
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5_EC209IncrementEiiPv||
                          DCD      0x8034afb0

                          AREA ||area_number.9||, LINKORDER=||i._ZN5_EC2012LoadSettingsEPSt6__FILE||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5_EC2012LoadSettingsEPSt6__FILE||
                          DCD      0x00000001

                          AREA ||area_number.10||, LINKORDER=||i._ZN5_EC2012SaveSettingsEPSt6__FILE||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5_EC2012SaveSettingsEPSt6__FILE||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "Source\\ec20.cpp"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___8_ec20_cpp_34a049e9___Z7__REV16j|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_ec20_cpp_34a049e9___Z7__REV16j| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___8_ec20_cpp_34a049e9___Z7__REVSHi|
#line 128
|__asm___8_ec20_cpp_34a049e9___Z7__REVSHi| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
