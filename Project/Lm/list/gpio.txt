; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave --exceptions -o.\output\gpio.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\gpio.d --cpu=Cortex-M3 --apcs=interwork//ropi -O0 --diag_suppress=9931 -I.\Include -I..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\..\Utilities\STM32F4-Discovery -I..\lib\inc -I..\..\Utilities\FatFs_R0_10b\src -I..\..\Utilities\MP3 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include -I..\..\..\..\Desktop\rapidjson-master\include -IC:\Users\MOCNIK\Documents\stm32\Project\Lm\RTE -IC:\Keil\ARM\PACK\Keil\STM32F2xx_DFP\1.0.7\Device\Include -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\PACK\Keil\STM32F2xx_DFP\1.0.7 -D__MICROLIB -D__UVISION_VERSION=515 -DSTM32F2XX -DUSE_STDPERIPH_DRIVER -DARM_MATH_CM3 -D__IOC_V2__ --omf_browse=.\output\gpio.crf Source\gpio.cpp]
                          THUMB

                          AREA ||i._ZN5_GPIO4PollEv||, CODE, READONLY, ALIGN=2

                  _ZN5_GPIO4PollEv PROC ; _GPIO::Poll()
;;;53     
;;;54     int   _GPIO::Poll(void) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;55     			if(key != (GPIO_ReadInputData(GPIOC) & __MASK)) {
000004  4810              LDR      r0,|L1.72|
000006  f7fffffe          BL       GPIO_ReadInputData
00000a  f4004078          AND      r0,r0,#0xf800
00000e  6821              LDR      r1,[r4,#0]
000010  4288              CMP      r0,r1
000012  d00a              BEQ      |L1.42|
;;;56     				key = GPIO_ReadInputData(GPIOC) & __MASK;
000014  480c              LDR      r0,|L1.72|
000016  f7fffffe          BL       GPIO_ReadInputData
00001a  f4004078          AND      r0,r0,#0xf800
00001e  6020              STR      r0,[r4,#0]
;;;57     				timeout = __time__ + 20;
000020  480a              LDR      r0,|L1.76|
000022  6800              LDR      r0,[r0,#0]  ; __time__
000024  3014              ADDS     r0,r0,#0x14
000026  6060              STR      r0,[r4,#4]
000028  e00b              B        |L1.66|
                  |L1.42|
;;;58     			} else if(__time__ > timeout) {
00002a  4908              LDR      r1,|L1.76|
00002c  6860              LDR      r0,[r4,#4]
00002e  6809              LDR      r1,[r1,#0]  ; __time__
000030  4288              CMP      r0,r1
000032  da06              BGE      |L1.66|
;;;59     				timeout=INT_MAX;
000034  f06f4000          MVN      r0,#0x80000000
000038  6060              STR      r0,[r4,#4]
;;;60     				return key & __MASK;
00003a  8820              LDRH     r0,[r4,#0]
00003c  f4004078          AND      r0,r0,#0xf800
                  |L1.64|
;;;61     			}
;;;62     			return EOF;
;;;63     }      
000040  bd10              POP      {r4,pc}
                  |L1.66|
000042  f04f30ff          MOV      r0,#0xffffffff        ;62
000046  e7fb              B        |L1.64|
;;;64     
                          ENDP

                  |L1.72|
                          DCD      0x40020800
                  |L1.76|
                          DCD      __time__

                          AREA ||i._ZN5_GPIOC1Ev||, CODE, READONLY, ALIGN=2

                  _ZN5_GPIOC2Ev                  ; Alternate entry point ; _GPIO::_GPIO__sub_object()
                  _ZN5_GPIOC1Ev PROC ; _GPIO::_GPIO()
;;;23     *******************************************************************************/
;;;24     _GPIO::_GPIO() {
;;;25     			GPIO_InitTypeDef	GPIO_InitStructure;
;;;26     	
;;;27     			GPIO_StructInit(&GPIO_InitStructure);
;;;28     			GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
;;;29     			GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;30     			GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3 | GPIO_Pin_4;
;;;31     			GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;32     			GPIO_ResetBits(GPIOB,GPIO_Pin_3 | GPIO_Pin_4);
;;;33     
;;;34     			GPIO_StructInit(&GPIO_InitStructure);
;;;35     			GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
;;;36     			GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
;;;37     			GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
;;;38     			GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10 | GPIO_Pin_11 | GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;
;;;39     			GPIO_Init(GPIOC, &GPIO_InitStructure);
;;;40     			GPIO_SetBits(GPIOC,GPIO_Pin_11 | GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15);	
;;;41     			GPIO_ResetBits(GPIOC,GPIO_Pin_10);	
;;;42     			timeout=key=0;
;;;43     }
;;;44     /*******************************************************************************
000000  b51c              PUSH     {r2-r4,lr}
000002  4604              MOV      r4,r0
000004  4668              MOV      r0,sp
000006  f7fffffe          BL       GPIO_StructInit
00000a  2001              MOVS     r0,#1
00000c  f88d0004          STRB     r0,[sp,#4]
000010  2000              MOVS     r0,#0
000012  f88d0006          STRB     r0,[sp,#6]
000016  2018              MOVS     r0,#0x18
000018  9000              STR      r0,[sp,#0]
00001a  4669              MOV      r1,sp
00001c  4813              LDR      r0,|L2.108|
00001e  f7fffffe          BL       GPIO_Init
000022  2118              MOVS     r1,#0x18
000024  4811              LDR      r0,|L2.108|
000026  f7fffffe          BL       GPIO_ResetBits
00002a  4668              MOV      r0,sp
00002c  f7fffffe          BL       GPIO_StructInit
000030  2001              MOVS     r0,#1
000032  f88d0004          STRB     r0,[sp,#4]
000036  f88d0006          STRB     r0,[sp,#6]
00003a  f88d0007          STRB     r0,[sp,#7]
00003e  f44f407c          MOV      r0,#0xfc00
000042  9000              STR      r0,[sp,#0]
000044  4669              MOV      r1,sp
000046  480a              LDR      r0,|L2.112|
000048  f7fffffe          BL       GPIO_Init
00004c  f44f4178          MOV      r1,#0xf800
000050  4807              LDR      r0,|L2.112|
000052  f7fffffe          BL       GPIO_SetBits
000056  f44f6180          MOV      r1,#0x400
00005a  4805              LDR      r0,|L2.112|
00005c  f7fffffe          BL       GPIO_ResetBits
000060  2000              MOVS     r0,#0
000062  6020              STR      r0,[r4,#0]
000064  6060              STR      r0,[r4,#4]
000066  4620              MOV      r0,r4
000068  bd1c              POP      {r2-r4,pc}
                          ENDP

00006a  0000              DCW      0x0000
                  |L2.108|
                          DCD      0x40020400
                  |L2.112|
                          DCD      0x40020800

                          AREA ||i._ZN5_TERM6EscapeEv||, CODE, READONLY, ALIGN=2

                  _ZN5_TERM6EscapeEv PROC ; _TERM::Escape()
;;;79     *******************************************************************************/
;;;80     int		_TERM::Escape(void) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;81     int		i=getchar();
000004  bf00              NOP      
000006  481e              LDR      r0,|L3.128|
000008  f7fffffe          BL       getc
00000c  4605              MOV      r5,r0
;;;82     	
;;;83     			if(i==EOF) {
00000e  1c68              ADDS     r0,r5,#1
000010  b978              CBNZ     r0,|L3.50|
;;;84     				if(timeout && (__time__ > abs(timeout))) {
000012  6861              LDR      r1,[r4,#4]
000014  b349              CBZ      r1,|L3.106|
000016  6860              LDR      r0,[r4,#4]
000018  2800              CMP      r0,#0
00001a  db01              BLT      |L3.32|
00001c  4601              MOV      r1,r0
00001e  e000              B        |L3.34|
                  |L3.32|
000020  4241              RSBS     r1,r0,#0
                  |L3.34|
000022  4a18              LDR      r2,|L3.132|
000024  6812              LDR      r2,[r2,#0]  ; __time__
000026  4291              CMP      r1,r2
000028  da24              BGE      |L3.116|
;;;85     					timeout=0;
00002a  2000              MOVS     r0,#0
00002c  6060              STR      r0,[r4,#4]
;;;86     					return seq;
00002e  6820              LDR      r0,[r4,#0]
                  |L3.48|
;;;87     					}
;;;88     			} else if(timeout > 0) {
;;;89     				seq=(seq<<8) | i;
;;;90     				if(i=='~' || i=='A' || i=='B' || i=='C' || i=='D') {
;;;91     					timeout=0;
;;;92     					return seq;
;;;93     				}
;;;94     			} else if(i==__Esc) {
;;;95     				timeout=__time__+5;
;;;96     				seq=i;
;;;97     			} else {
;;;98     				timeout=0;
;;;99     				return i;
;;;100    			}
;;;101    			return gp.Poll();
;;;102    }
000030  bd70              POP      {r4-r6,pc}
                  |L3.50|
000032  6860              LDR      r0,[r4,#4]            ;88
000034  2800              CMP      r0,#0                 ;88
000036  dd11              BLE      |L3.92|
000038  6820              LDR      r0,[r4,#0]            ;89
00003a  ea452000          ORR      r0,r5,r0,LSL #8       ;89
00003e  6020              STR      r0,[r4,#0]            ;89
000040  2d7e              CMP      r5,#0x7e              ;90
000042  d007              BEQ      |L3.84|
000044  2d41              CMP      r5,#0x41              ;90
000046  d005              BEQ      |L3.84|
000048  2d42              CMP      r5,#0x42              ;90
00004a  d003              BEQ      |L3.84|
00004c  2d43              CMP      r5,#0x43              ;90
00004e  d001              BEQ      |L3.84|
000050  2d44              CMP      r5,#0x44              ;90
000052  d10f              BNE      |L3.116|
                  |L3.84|
000054  2000              MOVS     r0,#0                 ;91
000056  6060              STR      r0,[r4,#4]            ;91
000058  6820              LDR      r0,[r4,#0]            ;92
00005a  e7e9              B        |L3.48|
                  |L3.92|
00005c  2d1b              CMP      r5,#0x1b              ;94
00005e  d105              BNE      |L3.108|
000060  4808              LDR      r0,|L3.132|
000062  6800              LDR      r0,[r0,#0]            ;95  ; __time__
000064  1d40              ADDS     r0,r0,#5              ;95
000066  6060              STR      r0,[r4,#4]            ;95
000068  6025              STR      r5,[r4,#0]            ;96
                  |L3.106|
00006a  e003              B        |L3.116|
                  |L3.108|
00006c  2000              MOVS     r0,#0                 ;98
00006e  6060              STR      r0,[r4,#4]            ;98
000070  4628              MOV      r0,r5                 ;99
000072  e7dd              B        |L3.48|
                  |L3.116|
000074  f1040008          ADD      r0,r4,#8              ;101
000078  f7fffffe          BL       _ZN5_GPIO4PollEv ; _GPIO::Poll()
00007c  e7d8              B        |L3.48|
;;;103    /**
                          ENDP

00007e  0000              DCW      0x0000
                  |L3.128|
                          DCD      __stdin
                  |L3.132|
                          DCD      __time__

                          AREA ||i._ZN5_TERM6RepeatEi||, CODE, READONLY, ALIGN=2

                  _ZN5_TERM6RepeatEi PROC ; _TERM::Repeat(int)
;;;70     *******************************************************************************/
;;;71     void	_TERM::Repeat(int t) {
000000  4a02              LDR      r2,|L4.12|
;;;72     			timeout = -(__time__ + t);
000002  6812              LDR      r2,[r2,#0]  ; __time__
000004  440a              ADD      r2,r2,r1
000006  4252              RSBS     r2,r2,#0
000008  6042              STR      r2,[r0,#4]
;;;73     }
00000a  4770              BX       lr
;;;74     /*******************************************************************************
                          ENDP

                  |L4.12|
                          DCD      __time__

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN5_GPIOC1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          REQUIRE __aeabi_unwind_cpp_pr0
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5_GPIOC1Ev||
                          DCD      0x8001a8b0

                          AREA ||area_number.6||, LINKORDER=||i._ZN5_GPIO4PollEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.ARM.exidx||
                          REQUIRE __aeabi_unwind_cpp_pr0
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5_GPIO4PollEv||
                          DCD      0x80a8b0b0

                          AREA ||area_number.7||, LINKORDER=||i._ZN5_TERM6RepeatEi||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5_TERM6RepeatEi||
                          DCD      0x00000001

                          AREA ||area_number.8||, LINKORDER=||i._ZN5_TERM6EscapeEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.ARM.exidx||
                          REQUIRE __aeabi_unwind_cpp_pr0
                          DCD      0x00000000
                          RELOC 42, ||i._ZN5_TERM6EscapeEv||
                          DCD      0x80aab0b0

;*** Start embedded assembler ***

#line 1 "Source\\gpio.cpp"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___8_gpio_cpp_3ad442db___Z7__REV16j|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_gpio_cpp_3ad442db___Z7__REV16j| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___8_gpio_cpp_3ad442db___Z7__REVSHi|
#line 128
|__asm___8_gpio_cpp_3ad442db___Z7__REVSHi| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
